name: destroy-networking
on: 
  workflow_dispatch:
    inputs:
      env:
        description: 'The Target Environment of the Destroy'
        required: true
        default: 'demo'

env:
  WORKING_DIRECTORY: instances/networking
  REMOTE_STATE_RG: rg-landing-zone
  REMOTE_STATE_SA: salandingzoneastus2
  REMOTE_STATE_CONTAINER: landing-zone-remote-state-${{ github.event.inputs.env }}
  REMOTE_STATE_KEY: deploy-networking.terraform.tfstate

permissions:
  id-token: write
  contents: read

jobs:
  destroy:
    name: 'destroy infrastructure'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    environment: ${{ github.event.inputs.env }}
    env:
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
    steps:
      - name: 'Checkout Repo'
        uses: actions/checkout@v2
      - name: 'Az CLI Login'
        uses: azure/login@v1
        with:
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
          client-id: ${{ secrets.CLIENT_ID }}
      - name: 'Get Deployer Secret'
        id: get-deployer-secret
        uses: azure/get-keyvault-secrets@v1
        with:
          keyvault: ${{ secrets.DEPLOYER_KEY_VAULT }}
          secrets: 'landing-zone-deployer, salandingzoneastus2-access-key'
      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v1
      - name: 'Terraform Init'
        env: 
          TF_CLI_ARGS_init: "-backend-config='resource_group_name=${{env.REMOTE_STATE_RG}}' -backend-config='storage_account_name=${{env.REMOTE_STATE_SA}}' -backend-config='container_name=${{env.REMOTE_STATE_CONTAINER}}' -backend-config='key=${{env.REMOTE_STATE_KEY}}'"
          ARM_ACCESS_KEY: ${{ steps.get-deployer-secret.outputs.salandingzoneastus2-access-key }}
        run: terraform init
      - name: 'Terraform Validate'
        run: terraform validate
      - name: 'Terraform Destroy'
        env:        
          ARM_CLIENT_SECRET: ${{ steps.get-deployer-secret.outputs.landing-zone-deployer }}
          ARM_ACCESS_KEY: ${{ steps.get-deployer-secret.outputs.salandingzoneastus2-access-key }}
        run: terraform destroy -auto-approve
      - name: 'Azure CLI logout'
        uses: azure/CLI@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
            az logout
            az cache purge
            az account clear